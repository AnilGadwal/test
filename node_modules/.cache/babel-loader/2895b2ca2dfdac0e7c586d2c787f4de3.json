{"ast":null,"code":"import _slicedToArray from\"/Users/anil/test/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useEffect,useState,useRef}from\"react\";import\"./Slider.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MultiRangeSlider=function MultiRangeSlider(_ref){var min=_ref.min,max=_ref.max,onChange=_ref.onChange;var _useState=useState(min),_useState2=_slicedToArray(_useState,2),minVal=_useState2[0],setMinVal=_useState2[1];var _useState3=useState(max),_useState4=_slicedToArray(_useState3,2),maxVal=_useState4[0],setMaxVal=_useState4[1];var minValRef=useRef(min);var maxValRef=useRef(max);var range=useRef(null);var left_value=useRef(null);var right_value=useRef(null);var getPercent=useCallback(function(value){return Math.round((value-min)/(max-min)*100);},[min,max]);useEffect(function(){var minPercent=getPercent(minVal);var maxPercent=getPercent(maxValRef.current);if(range.current){range.current.style.left=\"\".concat(minPercent,\"%\");range.current.style.width=\"\".concat(maxPercent-minPercent,\"%\");left_value.current.style.left=\"\".concat(minPercent-1,\"%\");}},[minVal,getPercent]);useEffect(function(){var minPercent=getPercent(minValRef.current);var maxPercent=getPercent(maxVal);if(range.current){range.current.style.width=\"\".concat(maxPercent-minPercent,\"%\");right_value.current.style.left=\"\".concat(maxPercent-2.5,\"%\");}},[maxVal,getPercent]);useEffect(function(){onChange({min:minVal,max:maxVal});},[minVal,maxVal,onChange]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:min,max:max,value:minVal,onChange:function onChange(event){var value=Math.min(Number(event.target.value),maxVal-1);setMinVal(value);minValRef.current=value;},className:\"thumb thumb--left\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:min,max:max,value:maxVal,label:maxVal,onChange:function onChange(event){var value=Math.max(Number(event.target.value),minVal+1);setMaxVal(value);maxValRef.current=value;},className:\"thumb thumb--right\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"slider\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"slider__track\"}),/*#__PURE__*/_jsx(\"div\",{className:\"slider_circle\",children:/*#__PURE__*/_jsx(\"div\",{className:\"slider_circle_inside\",children:/*#__PURE__*/_jsxs(\"span\",{children:[Math.round((maxVal-minVal)/100*100+1),\"%\"]})})}),/*#__PURE__*/_jsx(\"div\",{ref:range,className:\"slider__range\"}),/*#__PURE__*/_jsx(\"div\",{className:\"slider__left-value\",children:minVal}),/*#__PURE__*/_jsx(\"div\",{className:\"slider__right-value\",children:maxVal}),/*#__PURE__*/_jsx(\"p\",{className:\"left_value\",ref:left_value,children:minVal}),/*#__PURE__*/_jsx(\"p\",{className:\"right_value\",ref:right_value,children:maxVal})]})]});};export default MultiRangeSlider;","map":{"version":3,"sources":["/Users/anil/test/src/components/slider/Slider.js"],"names":["React","useCallback","useEffect","useState","useRef","MultiRangeSlider","min","max","onChange","minVal","setMinVal","maxVal","setMaxVal","minValRef","maxValRef","range","left_value","right_value","getPercent","value","Math","round","minPercent","maxPercent","current","style","left","width","event","Number","target"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport \"./Slider.css\";\n\nconst MultiRangeSlider = ({ min, max, onChange }) => {\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(min);\n  const maxValRef = useRef(max);\n  const range = useRef(null);\n  const left_value = useRef(null);\n  const right_value = useRef(null);\n\n  const getPercent = useCallback(\n    (value) => Math.round(((value - min) / (max - min)) * 100),\n    [min, max]\n  );\n\n  useEffect(() => {\n    const minPercent = getPercent(minVal);\n    const maxPercent = getPercent(maxValRef.current);\n\n    if (range.current) {\n      range.current.style.left = `${minPercent}%`;\n      range.current.style.width = `${maxPercent - minPercent}%`;\n      left_value.current.style.left = `${minPercent-1}%`;\n    }\n  }, [minVal, getPercent]);\n\n  useEffect(() => {\n    const minPercent = getPercent(minValRef.current);\n    const maxPercent = getPercent(maxVal);\n\n    if (range.current) {\n      range.current.style.width = `${maxPercent - minPercent}%`;\n      right_value.current.style.left = `${maxPercent-2.5}%`;\n    }\n  }, [maxVal, getPercent]);\n\n  useEffect(() => {\n    onChange({ min: minVal, max: maxVal });\n  }, [minVal, maxVal, onChange]);\n\n  return (\n    <div className=\"container\">\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={minVal}\n        onChange={(event) => {\n          const value = Math.min(Number(event.target.value), maxVal - 1);\n          setMinVal(value);\n          minValRef.current = value;\n        }}\n        className=\"thumb thumb--left\"\n      />\n      \n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={maxVal}\n        label={maxVal}\n        onChange={(event) => {\n          const value = Math.max(Number(event.target.value), minVal + 1);\n          setMaxVal(value);\n          maxValRef.current = value;\n        }}\n        className=\"thumb thumb--right\"\n      />\n\n      <div className=\"slider\">\n        <div className=\"slider__track\" />\n        <div className=\"slider_circle\">\n            <div className=\"slider_circle_inside\">\n                <span>{Math.round((((maxVal-minVal)/100)*100)+1)}%</span>\n            </div>\n        </div>\n        <div ref={range} className=\"slider__range\" />\n        <div className=\"slider__left-value\">{minVal}</div>\n        <div className=\"slider__right-value\">{maxVal}</div>\n        <p className=\"left_value\" ref={left_value}>{minVal}</p>      \n        <p className=\"right_value\" ref={right_value}>{maxVal}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MultiRangeSlider;\n"]},"metadata":{},"sourceType":"module"}